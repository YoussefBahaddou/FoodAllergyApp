-- Enable pgcrypto extension for UUID generation
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- ========================
-- 1. USERS TABLE
-- ========================
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL, -- Store hashed password
);

-- ========================
-- 2. ALLERGENS TABLE
-- ========================
CREATE TABLE allergens (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name TEXT NOT NULL UNIQUE,
    description TEXT
);

-- ========================
-- 3. USER_ALLERGENS TABLE (Many-to-Many)
-- ========================
CREATE TABLE user_allergens (
    user_id UUID NOT NULL,
    allergen_id UUID NOT NULL,
    selected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY (user_id, allergen_id),

    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (allergen_id) REFERENCES allergens(id) ON DELETE CASCADE
);

-- ========================
-- 4. PRODUCTS TABLE (Many-to-Many)
-- ========================

CREATE TABLE products (
    id UUID PRIMARY KEY,
    name TEXT,
    barcode TEXT,
    brand TEXT,
    ingredients TEXT,
    allergen_info TEXT,
    created_at TIMESTAMP WITHOUT TIME ZONE
);

-- ========================
-- 5. SCAN HISTORY (Many-to-Many)
-- ========================

CREATE TABLE scan_history (
    id UUID PRIMARY KEY,
    user_id UUID NOT NULL,
    product_id UUID NOT NULL,
    scan_type TEXT,
    scan_input TEXT,
    is_safe BOOLEAN,
    detected_allergens TEXT[],
    scanned_at TIMESTAMP WITHOUT TIME ZONE
);

ALTER TABLE scan_history
ADD CONSTRAINT fk_scan_history_user
FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE scan_history
ADD CONSTRAINT fk_scan_history_product
FOREIGN KEY (product_id) REFERENCES products(id);

-- ========================
-- INDEXES FOR PERFORMANCE
-- ========================
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_user_allergens_user_id ON user_allergens(user_id);
CREATE INDEX idx_user_allergens_allergen_id ON user_allergens(allergen_id);



************************************************************************************************************


-- ========= USERS =========
INSERT INTO users (id, username, email, password)
VALUES
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aymane', 'aymane@example.com', 'hashed_password_1'),
  ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'fatima', 'fatima@example.com', 'hashed_password_2'),
  ('33333333-cccc-cccc-cccc-cccccccccccc', 'youssef', 'youssef@example.com', 'hashed_password_3'),
  ('44444444-dddd-dddd-dddd-dddddddddddd', 'salma', 'salma@example.com', 'hashed_password_4'),
  ('55555555-eeee-eeee-eeee-eeeeeeeeeeee', 'hicham', 'hicham@example.com', 'hashed_password_5');

-- ========= ALLERGENS =========
INSERT INTO allergens (id, name, description)
VALUES
  ('aaaa1111-0000-0000-0000-000000000001', 'Amlou (Arachides)', 'Contient des arachides, très courant dans les produits Amlou.'),
  ('aaaa1111-0000-0000-0000-000000000002', 'Lait de Chèvre', 'Présent dans les fromages traditionnels comme Jben.'),
  ('aaaa1111-0000-0000-0000-000000000003', 'Gluten (Pain traditionnel)', 'Présent dans le pain khobz, msemen, harcha...'),
  ('aaaa1111-0000-0000-0000-000000000004', 'Fruits à coque (amandes)', 'Utilisés dans les gâteaux marocains comme le kaab ghzal.'),
  ('aaaa1111-0000-0000-0000-000000000005', 'Fruits de mer', 'Allergène commun dans les tajines de poisson, crevettes, etc.');

-- ========= USER_ALLERGENS =========
INSERT INTO user_allergens (user_id, allergen_id)
VALUES
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aaaa1111-0000-0000-0000-000000000001'), -- Aymane allergic to Amlou
  ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'aaaa1111-0000-0000-0000-000000000002'), -- Fatima allergic to goat milk
  ('33333333-cccc-cccc-cccc-cccccccccccc', 'aaaa1111-0000-0000-0000-000000000003'), -- Youssef allergic to gluten
  ('44444444-dddd-dddd-dddd-dddddddddddd', 'aaaa1111-0000-0000-0000-000000000004'), -- Salma allergic to almonds
  ('55555555-eeee-eeee-eeee-eeeeeeeeeeee', 'aaaa1111-0000-0000-0000-000000000005'), -- Hicham allergic to seafood
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aaaa1111-0000-0000-0000-000000000003'); -- Aymane also allergic to gluten


************************************************************************************************************



-- Create locations table
CREATE TABLE locations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name TEXT NOT NULL,
    address TEXT NOT NULL,
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    type TEXT NOT NULL CHECK (type IN ('EMERGENCY', 'RESTAURANT', 'STORE')),
    description TEXT,
    phone_number TEXT,
    is_allergy_safe BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create location_features table
CREATE TABLE location_features (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    location_id UUID NOT NULL,
    feature_name TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location_id) REFERENCES locations(id) ON DELETE CASCADE
);

-- Create indexes
CREATE INDEX idx_locations_type ON locations(type);
CREATE INDEX idx_locations_is_allergy_safe ON locations(is_allergy_safe);
CREATE INDEX idx_location_features_location_id ON location_features(location_id);

-- Insert sample data
INSERT INTO locations (id, name, address, latitude, longitude, type, description, phone_number, is_allergy_safe)
VALUES
    ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'Emergency Medical Center', '123 Main St', 33.5731, -7.5898, 'EMERGENCY', '24/7 Emergency Medical Services', '+212-123-456-789', false),
    ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'Allergy-Safe Restaurant', '456 Food Ave', 33.5732, -7.5899, 'RESTAURANT', 'Dedicated allergy-safe kitchen', '+212-987-654-321', true),
    ('33333333-cccc-cccc-cccc-cccccccccccc', 'Allergy-Safe Store', '789 Market St', 33.5733, -7.5900, 'STORE', 'Specialized in allergy-free products', '+212-456-789-012', true);

INSERT INTO location_features (location_id, feature_name)
VALUES
    ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'Gluten-free options'),
    ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'Nut-free kitchen'),
    ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'Dairy-free menu'),
    ('33333333-cccc-cccc-cccc-cccccccccccc', 'Dedicated allergy-free section'),
    ('33333333-cccc-cccc-cccc-cccccccccccc', 'Staff trained in allergies'),
    ('33333333-cccc-cccc-cccc-cccccccccccc', 'Product allergen labeling');