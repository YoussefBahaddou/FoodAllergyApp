-- Enable pgcrypto extension for UUID generation
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- ========================
-- 1. USERS TABLE
-- ========================
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL, -- Store hashed password
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ========================
-- 2. ALLERGENS TABLE
-- ========================
CREATE TABLE allergens (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name TEXT NOT NULL UNIQUE,
    description TEXT
);

-- ========================
-- 3. USER_ALLERGENS TABLE (Many-to-Many)
-- ========================
CREATE TABLE user_allergens (
    user_id UUID NOT NULL,
    allergen_id UUID NOT NULL,
    selected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY (user_id, allergen_id),

    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (allergen_id) REFERENCES allergens(id) ON DELETE CASCADE
);

-- ========================
-- 4. INDEXES FOR PERFORMANCE
-- ========================
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_user_allergens_user_id ON user_allergens(user_id);
CREATE INDEX idx_user_allergens_allergen_id ON user_allergens(allergen_id);



************************************************************************************************************


-- ========= USERS =========
INSERT INTO users (id, username, email, password)
VALUES
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aymane', 'aymane@example.com', 'hashed_password_1'),
  ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'fatima', 'fatima@example.com', 'hashed_password_2'),
  ('33333333-cccc-cccc-cccc-cccccccccccc', 'youssef', 'youssef@example.com', 'hashed_password_3'),
  ('44444444-dddd-dddd-dddd-dddddddddddd', 'salma', 'salma@example.com', 'hashed_password_4'),
  ('55555555-eeee-eeee-eeee-eeeeeeeeeeee', 'hicham', 'hicham@example.com', 'hashed_password_5');

-- ========= ALLERGENS =========
INSERT INTO allergens (id, name, description)
VALUES
  ('aaaa1111-0000-0000-0000-000000000001', 'Amlou (Arachides)', 'Contient des arachides, très courant dans les produits Amlou.'),
  ('aaaa1111-0000-0000-0000-000000000002', 'Lait de Chèvre', 'Présent dans les fromages traditionnels comme Jben.'),
  ('aaaa1111-0000-0000-0000-000000000003', 'Gluten (Pain traditionnel)', 'Présent dans le pain khobz, msemen, harcha...'),
  ('aaaa1111-0000-0000-0000-000000000004', 'Fruits à coque (amandes)', 'Utilisés dans les gâteaux marocains comme le kaab ghzal.'),
  ('aaaa1111-0000-0000-0000-000000000005', 'Fruits de mer', 'Allergène commun dans les tajines de poisson, crevettes, etc.');

-- ========= USER_ALLERGENS =========
INSERT INTO user_allergens (user_id, allergen_id)
VALUES
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aaaa1111-0000-0000-0000-000000000001'), -- Aymane allergic to Amlou
  ('22222222-bbbb-bbbb-bbbb-bbbbbbbbbbbb', 'aaaa1111-0000-0000-0000-000000000002'), -- Fatima allergic to goat milk
  ('33333333-cccc-cccc-cccc-cccccccccccc', 'aaaa1111-0000-0000-0000-000000000003'), -- Youssef allergic to gluten
  ('44444444-dddd-dddd-dddd-dddddddddddd', 'aaaa1111-0000-0000-0000-000000000004'), -- Salma allergic to almonds
  ('55555555-eeee-eeee-eeee-eeeeeeeeeeee', 'aaaa1111-0000-0000-0000-000000000005'), -- Hicham allergic to seafood
  ('11111111-aaaa-aaaa-aaaa-aaaaaaaaaaaa', 'aaaa1111-0000-0000-0000-000000000003'); -- Aymane also allergic to gluten


************************************************************************************************************